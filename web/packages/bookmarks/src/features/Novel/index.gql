query getNovels($collectionMatch: TagMatch, $novelStatus: NovelStatus, $tagMatch: TagMatch, $pagination: Pagination!) {
  queryNovels(
    collectionMatch: $collectionMatch
    novelStatus: $novelStatus
    tagMatch: $tagMatch
    pagination: $pagination
  ) {
    data {
      id
      name
      description
      createTime
      updateTime
      description
      novelStatus
      avatar
      site
    }
    total
  }
}

mutation createNovel($data: CreateNovelInput!) {
  createNovel(data: $data) {
    id
  }
}
mutation deleteNovel($id: Int!) {
  deleteNovel(id: $id) {
    id
  }
}

query getNovel($id: Int!) {
  getNovel(id: $id) {
    id
    name
    avatar
    description
    createTime
    updateTime
    description
    novelStatus
    url
    chapters {
      id
      title
      createTime
      updateTime
      url
      wordCount
      time
    }
    author {
      avatar
      description
      id
      name
      site
    }
    lastChapter {
      time
    }
    firstChapter {
      time
    }
    wordCount
    tags {
      url
      name
      id
    }
    site
    collections {
      name
      id
      description
      path
    }
  }
}

query fetchNovel($id: String!, $novelSite: NovelSite!) {
  fetchNovel(id: $id, novelSite: $novelSite) {
    author {
      description
      image
      name
      url
      id
    }
    chapters {
      title
      url
      site
      time
      wordCount
      id
    }
    tags {
      id
      name
      url
    }
    description
    image
    name
    url
    site
    status
    id
  }
}

mutation updateNovelByCrawler($novelId: Int!) {
  updateNovelByCrawler(novelId: $novelId) {
    id
  }
}

mutation addCollectionForNovel($novelId: Int!, $collectionId: Int!) {
  addCollectionForNovel(collectionId: $collectionId, novelId: $novelId) {
    id
  }
}

mutation deleteCollectionForNovel($novelId: Int!, $collectionId: Int!) {
  deleteCollectionForNovel(collectionId: $collectionId, novelId: $novelId) {
    id
  }
}

mutation saveDraftNovel($novel: SaveDraftNovel!) {
  saveDraftNovel(novel: $novel) {
    id
  }
}
