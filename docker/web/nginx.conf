user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
    worker_connections 1024;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    sendfile on;
    #tcp_nopush     on;

    keepalive_timeout 65;

    gzip on;
    etag off;
    client_max_body_size 20m;

    server {
        listen 80;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            return 404;
        }
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    # auth
    server {
        listen 80;
        server_name auth.sushao.top;

        #access_log  /var/log/nginx/host.access.log  main;

        location /api {
            return 301 https://$host$request_uri; # 重定向
        }
        # certbot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
    server {
        listen 443 ssl http2;
        server_name auth.sushao.top;
        #请填写证书文件的相对路径或绝对路径
        ssl_certificate /etc/letsencrypt/live/sushao.top-0006/fullchain.pem;
        #请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /etc/letsencrypt/live/sushao.top-0006/privkey.pem;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        location /api {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://login:8000; # 代理
        }
    }
    #  bookmarks
    server {
        listen 80;
        server_name bookmarks.sushao.top;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            return 301 https://$host$request_uri; # 重定向
        }
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
    server {
        listen 443 ssl http2;
        server_name bookmarks.sushao.top;
        #请填写证书文件的相对路径或绝对路径
        ssl_certificate /etc/letsencrypt/live/sushao.top-0006/fullchain.pem;
        #请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /etc/letsencrypt/live/sushao.top-0006/privkey.pem;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        location /graphql {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://bookmarks:8080; # 代理
        }
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://host.docker.internal:3002; # 代理
        }
        location /ws {
            proxy_pass http://host.docker.internal:3002; # 将此端口替换为您的WebSocket服务器端口
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }

    # collections
    server {
        listen 80;
        server_name collections.sushao.top;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            return 301 https://$host$request_uri; # 重定向
        }
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
    server {
        listen 443 ssl http2;
        server_name collections.sushao.top;
        #请填写证书文件的相对路径或绝对路径
        ssl_certificate /etc/letsencrypt/live/sushao.top-0006/fullchain.pem;
        #请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /etc/letsencrypt/live/sushao.top-0006/privkey.pem;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        location /graphql {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://collections:8080; # 代理
        }
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://host.docker.internal:3001; # 代理
        }
        location /ws {
            proxy_pass http://host.docker.internal:3001; # 将此端口替换为您的WebSocket服务器端口
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }

    # common
    server {
        listen 80;
        server_name sushao.top;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            return 301 https://$host$request_uri; # 重定向
        }
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
    server {
        listen 443 ssl http2;
        server_name sushao.top;
        #请填写证书文件的相对路径或绝对路径
        ssl_certificate /etc/letsencrypt/live/sushao.top-0006/fullchain.pem;
        #请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /etc/letsencrypt/live/sushao.top-0006/privkey.pem;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-real-ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://host.docker.internal:3000; # 代理
            # root /app/admin;
            # index index.html index.html;
            # try_files $uri /index.html;
        }
        location /ws {
            proxy_pass http://host.docker.internal:3000; # 将此端口替换为您的WebSocket服务器端口
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}